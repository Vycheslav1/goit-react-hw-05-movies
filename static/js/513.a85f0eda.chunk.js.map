{"version":3,"file":"static/js/513.a85f0eda.chunk.js","mappings":"gQAGaA,EAAMC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,8DAMhBC,EAAKH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,qICPdG,GDgBaL,EAAAA,GAAAA,IAAUM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,wEAMVF,EAAAA,EAAAA,IAAOO,EAAAA,GAAPP,CAAeQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,uLCtBtBF,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,qFAOhBO,EAAKT,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,6BAIdQ,EAAOV,EAAAA,GAAAA,EAAQM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,6OAcfS,EAAUX,EAAAA,GAAAA,EAAQQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,6O,kBCzBlBH,EAAMC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,uGAQhBU,EAAIZ,EAAAA,GAAAA,EAAQI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,oLCRZW,EAAe,WAAH,OACvBC,EAAAA,EAAAA,KAACf,EAAG,CAAAgB,UACFD,EAAAA,EAAAA,KAACF,EAAC,CAAAG,SAAC,uCACC,ECGO,SAASC,EAAIC,GAAc,IAAXC,EAAMD,EAANC,OAC7BC,GAAwBC,EAAAA,EAAAA,UAAS,CAC/BC,MAAO,GACPC,WAAW,IACXC,GAAAC,EAAAA,EAAAA,GAAAL,EAAA,GAHKM,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GAepB,OAXAI,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,GAAU,YAADC,OACKX,EAAM,qEAClBY,MAAK,SAAAC,GACLL,GAAQ,SAAAM,GAAI,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACPD,GAAI,IACPX,MAAO,CAACU,EAASN,KAAKS,MACtBZ,WAAW,GAAK,GAEpB,GACF,GAAG,CAACG,EAAKJ,MAAOH,KAEdJ,EAAAA,EAAAA,KAACf,EAAG,CAAAgB,UACFoB,EAAAA,EAAAA,MAAChC,EAAE,CAAAY,SAAA,EACCU,EAAKH,WAAaG,EAAKJ,MAAM,GAAGe,KAAI,SAAAF,GAAI,OCrB1B,SAAHjB,GAAA,IACnBoB,EAAEpB,EAAFoB,GACAC,EAAYrB,EAAZqB,aACAC,EAAItB,EAAJsB,KACAC,EAAavB,EAAbuB,cACAC,EAAUxB,EAAVwB,WAAU,OAEVN,EAAAA,EAAAA,MAAC1B,EAAE,CAAAM,SAAA,EACDD,EAAAA,EAAAA,KAACT,EAAG,CACFqC,IACEJ,EAAY,mCAAAT,OAC2BS,GAb7C,8EAgBIK,IAAKJ,KAEPJ,EAAAA,EAAAA,MAACzB,EAAI,CAAAK,SAAA,EACHD,EAAAA,EAAAA,KAAA,KAAAC,SAAG,uBAEFyB,MAEHL,EAAAA,EAAAA,MAACxB,EAAO,CAAAI,SAAA,EACND,EAAAA,EAAAA,KAAA,KAAAC,SAAG,qBAEF0B,OAjBIJ,EAmBJ,CDL+CO,CAASV,EAAK,KAC1DT,EAAKH,YAAcG,EAAKJ,MAAM,GAAGwB,SAAU/B,EAAAA,EAAAA,KAACD,EAAY,QAIlE,C","sources":["components/Cast/CastStyles.js","components/CastItem/CastItemStyles.js","components/NotFoundCast/NotFoundCastStyles.js","components/NotFoundCast/NotFoundCast.js","components/Cast/Cast.js","components/CastItem/CastItem.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Div = styled.div`\n  display: block;\n  width: auto;\n  height: auto;\n`;\n\nexport const Ul = styled.ul`\n  display: flex;\n  flex-direction: column;\n  list-style: none;\n  margin-left: 40px;\n  margin-top: 20px;\n  gap: 40px;\n`;\n\nexport const NavDetails = styled.nav`\n  display: flex;\n  margin-top: 20px;\n  margin-left: 20px;\n`;\n\nexport const StyledLink = styled(NavLink)`\n  display: flex;\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.2;\n  letter-spacing: 0.06em;\n  color: black;\n`;\n","import styled from 'styled-components';\n\nexport const Img = styled.img`\n  display: flex;\n  width: 250px;\n  height: auto;\n  object-fit: cover;\n`;\n\nexport const Li = styled.li`\n  display: block;\n`;\n\nexport const Name = styled.p`\n  display: flex;\n  width: auto;\n  height: auto;\n  margin-top: 10px;\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.2;\n  letter-spacing: 0.06em;\n  color: black;\n`;\n\nexport const Popular = styled.p`\n  display: flex;\n  width: auto;\n  height: auto;\n  margin-top: 10px;\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.2;\n  letter-spacing: 0.06em;\n  color: black;\n`;\n","import styled from 'styled-components';\n\nexport const Div = styled.div`\n  display: flex;\n  width: auto;\n  height: auto;\n  margin-top: 20p;\n  margin-left: 20px;\n`;\n\nexport const P = styled.p`\n  display: flex;\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 24px;\n  line-height: 1.2;\n  letter-spacing: 0.06;\n  color: #000;\n`;\n","import { Div, P } from './NotFoundCastStyles.js';\n\nexport const NotFoundCast = () => (\n  <Div>\n    <P>There are no casts for this movie</P>\n  </Div>\n);\n","import { useState, useEffect } from 'react';\nimport { Div, Ul } from './CastStyles';\nimport { CastItem } from 'components/CastItem/CastItem.js';\nimport { getMovies } from 'api/data_search.js';\nimport { NotFoundCast } from 'components/NotFoundCast/NotFoundCast.js';\n\nimport PropTypes from 'prop-types';\n\nexport default function Cast({ filmId }) {\n  const [data, setData] = useState({\n    films: [],\n    isLoading: true,\n  });\n  useEffect(() => {\n    getMovies(\n      `/3/movie/${filmId}/credits?api_key=d0e55d9c3b81e26ea2922058fa861ca2&language=en-US`\n    ).then(response => {\n      setData(prev => ({\n        ...prev,\n        films: [response.data.cast],\n        isLoading: false,\n      }));\n    });\n  }, [data.films, filmId]);\n  return (\n    <Div>\n      <Ul>\n        {!data.isLoading && data.films[0].map(cast => CastItem(cast))}\n        {!data.isLoading && !data.films[0].length && <NotFoundCast />}\n      </Ul>\n    </Div>\n  );\n}\nCast.propTypes = {\n  filmId: PropTypes.string.isRequired,\n};\n","import { Name, Popular, Li, Img } from './CastItemStyles.js';\nimport PropTypes from 'prop-types';\n\nconst defaultImg =\n  'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\nexport const CastItem = ({\n  id,\n  profile_path,\n  name,\n  original_name,\n  popularity,\n}) => (\n  <Li key={id}>\n    <Img\n      src={\n        profile_path\n          ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n          : defaultImg\n      }\n      alt={name}\n    />\n    <Name>\n      <b>Original Name:&nbsp;</b>\n\n      {original_name}\n    </Name>\n    <Popular>\n      <b>Popularity:&nbsp; </b>\n\n      {popularity}\n    </Popular>\n  </Li>\n);\n\nCastItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  profile_path: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  original_name: PropTypes.string.isRequired,\n  popularity: PropTypes.number.isRequired,\n};\n"],"names":["Div","styled","_templateObject","_taggedTemplateLiteral","Ul","_templateObject2","Img","_templateObject3","NavLink","_templateObject4","Li","Name","Popular","P","NotFoundCast","_jsx","children","Cast","_ref","filmId","_useState","useState","films","isLoading","_useState2","_slicedToArray","data","setData","useEffect","getMovies","concat","then","response","prev","_objectSpread","cast","_jsxs","map","id","profile_path","name","original_name","popularity","src","alt","CastItem","length"],"sourceRoot":""}