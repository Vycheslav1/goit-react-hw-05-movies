{"version":3,"file":"static/js/28.5c24d7eb.chunk.js","mappings":"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","sources":["pages/Cast/CastStyles.js","pages/CastItem/CastItemStyles.js","pages/Cast/Cast.js","pages/CastItem/CastItem.js","pages/Reviews/ReviewsStyles.js","pages/ReviewItem/ReviewItemStyles.js","pages/Reviews/Reviews.js","pages/ReviewItem/ReviewItem.js","pages/MovieDetails/MovieDetailsStyles.js","pages/MovieDetails/MovieDetails.js","pages/Home/HomeStyles.js","pages/NotFound/NotFoundStyles.js","pages/NotFound/NotFound.js","pages/Home/Home.js","pages/MovieRoutes/MovieRoutes.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Div = styled.div`\n  display: block;\n  width: auto;\n  height: auto;\n`;\n\nexport const Ul = styled.ul`\n  display: flex;\n  flex-direction: column;\n  list-style: none;\n  margin-left: 40px;\n  margin-top: 20px;\n  gap: 40px;\n`;\n\nexport const NavDetails = styled.nav`\n  display: flex;\n  margin-top: 20px;\n  margin-left: 20px;\n`;\n\nexport const StyledLink = styled(NavLink)`\n  display: flex;\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.2;\n  letter-spacing: 0.06em;\n  color: black;\n`;\n","import styled from 'styled-components';\n\nexport const Img = styled.img`\n  display: flex;\n  width: 250px;\n  height: auto;\n  object-fit: cover;\n`;\n\nexport const Li = styled.li`\n  display: block;\n`;\n\nexport const Name = styled.p`\n  display: flex;\n  width: auto;\n  height: auto;\n  margin-top: 10px;\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.2;\n  letter-spacing: 0.06em;\n  color: black;\n`;\n\nexport const Popular = styled.p`\n  display: flex;\n  width: auto;\n  height: auto;\n  margin-top: 10px;\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.2;\n  letter-spacing: 0.06em;\n  color: black;\n`;\n","import { Div, Ul, StyledLink, NavDetails } from './CastStyles';\nimport { CastItem } from 'pages/CastItem/CastItem.js';\nimport { MovieDetails } from 'pages/MovieDetails/MovieDetails.js';\nimport { nanoid } from 'nanoid';\nimport { Routes, Route } from 'react-router-dom';\n\nconst back = nanoid();\n\nexport const Cast = () => {\n  return (\n    <Div>\n      <NavDetails>\n        <StyledLink\n          key={back}\n          to={`/:${JSON.parse(localStorage.getItem('cast')).data.id}`}\n        >\n          Back\n        </StyledLink>\n      </NavDetails>\n      <Routes>\n        <Route path=\"/:id\" element={<MovieDetails />} />\n      </Routes>\n      <Ul>\n        {JSON.parse(localStorage.getItem('cast')).data.cast.map(cast =>\n          CastItem(cast)\n        )}\n      </Ul>\n    </Div>\n  );\n};\n","import { Name, Popular, Li, Img } from './CastItemStyles.js';\nimport PropTypes from 'prop-types';\n\nconst defaultImg =\n  'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\nexport const CastItem = ({\n  id,\n  profile_path,\n  name,\n  original_name,\n  popularity,\n}) => (\n  <Li key={id}>\n    <Img\n      src={\n        profile_path\n          ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n          : defaultImg\n      }\n      alt={name}\n    />\n    <Name>\n      <b>Original Name:&nbsp;</b>\n\n      {original_name}\n    </Name>\n    <Popular>\n      <b>Popularity:&nbsp; </b>\n\n      {popularity}\n    </Popular>\n  </Li>\n);\n\nCastItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  profile_path: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  original_name: PropTypes.string.isRequired,\n  popularity: PropTypes.number.isRequired,\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Div = styled.div`\n  display: block;\n  width: auto;\n  height: auto;\n`;\n\nexport const Ul = styled.ul`\n  display: flex;\n  flex-direction: column;\n  list-style: none;\n  margin-left: 40px;\n  margin-top: 20px;\n  gap: 40px;\n`;\n\nexport const NavDetails = styled.nav`\n  display: flex;\n  margin-top: 20px;\n  margin-left: 20px;\n`;\n\nexport const StyledLink = styled(NavLink)`\n  display: flex;\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.2;\n  letter-spacing: 0.06em;\n  color: black;\n`;\n","import styled from 'styled-components';\n\nexport const Li = styled.li`\n  display: block;\n`;\n\nexport const Author = styled.p`\n  display: flex;\n  width: auto;\n  height: auto;\n  margin-top: 10px;\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.2;\n  letter-spacing: 0.06em;\n  color: black;\n`;\n\nexport const Rating = styled.p`\n  display: flex;\n  width: auto;\n  height: auto;\n  margin-top: 10px;\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.2;\n  letter-spacing: 0.06em;\n  color: black;\n`;\n\nexport const Content = styled.p`\n  display: flex;\n  width: auto;\n  height: auto;\n  margin-top: 10px;\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.2;\n  letter-spacing: 0.06em;\n  color: black;\n`;\n\nexport const Created = styled.p`\n  display: flex;\n  width: auto;\n  height: auto;\n  margin-top: 10px;\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.2;\n  letter-spacing: 0.06em;\n  color: black;\n`;\n\nexport const Updated = styled.p`\n  display: flex;\n  width: auto;\n  height: auto;\n  margin-top: 10px;\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.2;\n  letter-spacing: 0.06em;\n  color: black;\n`;\n\nexport const Url = styled.p`\n  display: flex;\n  width: auto;\n  height: auto;\n  margin-top: 10px;\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.2;\n  letter-spacing: 0.06em;\n  color: black;\n`;\n","import { Div, Ul, NavDetails, StyledLink } from './ReviewsStyles.js';\nimport { ReviewItem } from 'pages/ReviewItem/ReviewItem.js';\nimport { MovieDetails } from 'pages/MovieDetails/MovieDetails.js';\nimport { nanoid } from 'nanoid';\nimport { Routes, Route } from 'react-router-dom';\n\nconst back = nanoid();\n\nexport const Reviews = () => (\n  <Div>\n    <NavDetails>\n      <StyledLink\n        key={back}\n        to={`/:${JSON.parse(localStorage.getItem('reviews')).data.id}`}\n      >\n        Back\n      </StyledLink>\n    </NavDetails>\n    <Routes>\n      <Route path=\"/:id\" element={<MovieDetails />} />\n    </Routes>\n    <Ul>\n      {JSON.parse(localStorage.getItem('reviews')).data.results.map(review =>\n        ReviewItem(review)\n      )}\n    </Ul>\n  </Div>\n);\n","import PropTypes from 'prop-types';\n\nimport {\n  Li,\n  Author,\n  Rating,\n  Content,\n  Created,\n  Updated,\n  Url,\n} from './ReviewItemStyles.js';\n\nexport const ReviewItem = ({\n  id,\n  author_details,\n  content,\n  created_at,\n  updated_at,\n  url,\n}) => (\n  <Li key={id}>\n    <Author>\n      <b>Author: &nbsp;</b>\n      {author_details.name}\n    </Author>\n    <Rating>\n      <b>Rating: &nbsp;</b>\n      {author_details.rating}\n    </Rating>\n    <Content>\n      <b>Content:&nbsp; </b>\n      {content}\n    </Content>\n    <Created>\n      <b>created at:&nbsp; </b>\n      {created_at}\n    </Created>\n    <Updated>\n      <b>updated at: &nbsp;</b>\n      {updated_at}\n    </Updated>\n    <Url>\n      <b>url: &nbsp;</b>\n      {url}\n    </Url>\n  </Li>\n);\n\nReviewItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  author_details: PropTypes.string.isRequired,\n  content: PropTypes.string.isRequired,\n  created_at: PropTypes.string.isRequired,\n  updated_at: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nimport { NavLink } from 'react-router-dom';\n\nexport const Div = styled.div`\n  margin-top: 20px;\n  margin-left: 20px;\n  width: 100%;\n  height: 100%;\n`;\n\nexport const NavDetails = styled.nav`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n\nexport const Img = styled.img`\n  display: flex;\n  width: 400px;\n  height: auto;\n  object-fit: cover;\n`;\n\nexport const StyledLink = styled(NavLink)`\n  font-family: 'Roboto';\n  display: list-item;\n  margin-left: 20px;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.2;\n  letter-spacing: 0.06em;\n  color: black;\n`;\n\nexport const Ul = styled.ul`\n  display: flex;\n  list-style: none;\n  gap: 20px;\n`;\n\nexport const Li = styled.li`\n  display: flex;\n`;\n\nexport const DivInfo = styled.div`\n  display: block;\n`;\n\nexport const H1 = styled.h1`\n  display: flex;\n  margin-top: 20px;\n  width: auto;\n  height: auto;\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 24px;\n  line-height: 1.2;\n  letter-spacing: 0.06em;\n  text-transform: uppercase;\n  color: #000;\n`;\n\nexport const POrigin = styled.p`\n  display: flex;\n  margin-top: 20px;\n  width: auto;\n  height: auto;\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.2;\n  letter-spacing: 0.06em;\n  color: #000;\n`;\n\nexport const PMedia = styled.p`\n  display: flex;\n  margin-top: 20px;\n  width: auto;\n  height: auto;\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.2;\n  letter-spacing: 0.06em;\n  color: #000;\n`;\n\nexport const PLanguage = styled.p`\n  display: flex;\n  margin-top: 20px;\n  width: auto;\n  height: auto;\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.2;\n  letter-spacing: 0.06em;\n  color: #000;\n`;\n\nexport const POverview = styled.p`\n  display: flex;\n  margin-top: 20px;\n  width: 800px;\n  height: auto;\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.2;\n  letter-spacing: 0.06em;\n  color: #000;\n`;\n\nexport const PPopularity = styled.p`\n  display: flex;\n  margin-top: 20px;\n  width: auto;\n  height: auto;\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.2;\n  letter-spacing: 0.06em;\n  color: #000;\n`;\n\nexport const PRelease = styled.p`\n  display: flex;\n  margin-top: 20px;\n  width: auto;\n  height: auto;\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.2;\n  letter-spacing: 0.06em;\n  color: #000;\n`;\n\nexport const PAverage = styled.p`\n  display: flex;\n  margin-top: 20px;\n  width: auto;\n  height: auto;\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.2;\n  letter-spacing: 0.06em;\n  color: #000;\n`;\n\nexport const PCount = styled.p`\n  display: flex;\n  margin-top: 20px;\n  width: auto;\n  height: auto;\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.2;\n  letter-spacing: 0.06em;\n  color: #000;\n`;\nexport const PInfo = styled.p`\n  display: flex;\n  margin-top: 20px;\n  width: auto;\n  height: auto;\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.2;\n  letter-spacing: 0.06em;\n  color: #000;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport { getMovies } from 'api/data_search.js';\nimport { useLocation } from 'react-router-dom';\nimport { Cast } from 'pages/Cast/Cast.js';\nimport { Reviews } from 'pages/Reviews/Reviews.js';\n\nimport {\n  StyledLink,\n  Div,\n  Ul,\n  Li,\n  DivInfo,\n  H1,\n  POrigin,\n  PMedia,\n  PLanguage,\n  POverview,\n  PPopularity,\n  PRelease,\n  PAverage,\n  PCount,\n  PInfo,\n  NavDetails,\n  Img,\n} from 'pages/MovieDetails/MovieDetailsStyles.js';\n\nimport { Routes, Route } from 'react-router-dom';\nimport { nanoid } from 'nanoid';\nconst identCast = nanoid();\nconst identReview = nanoid();\n\nconst defaultImg =\n  'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\nlet movie = {};\n\nconst MovieDetails = () => {\n  const movieId = useParams();\n\n  JSON.parse(localStorage.getItem('response')).data.results.forEach(result => {\n    if (!movieId) {\n      return;\n    } else if (':' + result.id === movieId.id) {\n      movie = result;\n    }\n  });\n\n  const location = useLocation();\n\n  const backLinkCast = location.state?.from ?? `/${movieId.id}/cast`;\n  const backLinkReviews = location.state?.from ?? `/${movieId.id}/reviews`;\n\n  useEffect(() => {\n    getMovies(\n      `/3/movie/${movie.id}/credits?api_key=d0e55d9c3b81e26ea2922058fa861ca2&language=en-US`\n    ).then(response => {\n      localStorage.setItem('cast', JSON.stringify(response));\n    });\n\n    getMovies(\n      `/3/movie/${movie.id}/reviews?api_key=d0e55d9c3b81e26ea2922058fa861ca2&language=en-US`\n    ).then(response => {\n      localStorage.setItem('reviews', JSON.stringify(response));\n    });\n  }, []);\n\n  return (\n    <Div>\n      <Ul>\n        <Li>\n          <Img\n            src={\n              movie.poster_path\n                ? `https://image.tmdb.org/t/p/w500/${movie.poster_path}`\n                : defaultImg\n            }\n            alt={'poster'}\n          />\n        </Li>\n        <Li>\n          <DivInfo>\n            <H1>{movie.title ? movie.title : movie.name}</H1>\n            <POrigin>\n              <b>{movie.origin_country && 'Origin country:'}&nbsp;</b>\n              {movie.origin_country && movie.origin_country}\n            </POrigin>\n            <PMedia>\n              <b>{movie.media_type && 'Media type:'}&nbsp;</b>\n              {movie.media_type}\n            </PMedia>\n            <PLanguage>\n              <b>Original language:&nbsp;</b>\n              {movie.original_language}\n            </PLanguage>\n            <POverview>\n              <b>Overview:&nbsp;</b>\n              {movie.overview}\n            </POverview>\n            <PPopularity>\n              <b>Popularity:&nbsp;</b>\n              {movie.popularity}\n            </PPopularity>\n            <PRelease>\n              <b>Release date:&nbsp;</b>\n              {movie.first_air_date ? movie.first_air_date : movie.release_date}\n            </PRelease>\n            <PAverage>\n              <b>Vote average:&nbsp;</b>\n              {movie.vote_average}\n            </PAverage>\n            <PCount>\n              <b>Vote count:&nbsp;</b>\n              {movie.vote_count}\n            </PCount>\n          </DivInfo>\n        </Li>\n      </Ul>\n      <PInfo>\n        <b>Additional Information</b>\n      </PInfo>\n      <NavDetails>\n        <StyledLink key={identCast} to={backLinkCast}>\n          Cast\n        </StyledLink>\n\n        <StyledLink key={identReview} to={backLinkReviews}>\n          Reviews\n        </StyledLink>\n      </NavDetails>\n      <Routes>\n        <Route path=\"/cast/*\" element={<Cast />} />\n        <Route path=\"/reviews/*\" element={<Reviews />} />\n      </Routes>\n    </Div>\n  );\n};\n\nexport { MovieDetails };\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Div = styled.div`\n  margin-top: 20px;\n  margin-left: 20px;\n`;\n\nexport const H1 = styled.h1`\n  display: flex;\n  margin-left: 20px;\n  margin-top: 20px;\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 24px;\n  line-height: 1.2;\n  letter-spacing: 0.02em;\n  color: black;\n`;\n\nexport const Nav = styled.nav`\n  display: flex;\n  gap: 10px;\n`;\n\nexport const StyledLink = styled(NavLink)`\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.2;\n  letter-spacing: 0.06em;\n  color: black;\n`;\n\nexport const NavList = styled.nav`\n  display: block;\n  margin-top: 10px;\n  margin-left: 20px;\n  gap: 10px;\n`;\n","import styled from 'styled-components';\n\nexport const Div = styled.div`\n  display: flex;\n  width: 100vw;\n  height: 100vh;\n`;\n\nexport const P = styled.p`\ndisplay:flex;\nmargin-left:20px;\nmargin-top:50px;\nfony-family:'Roboto';\nfont-style:normal;\nfont-weight:500;\nfont-size:24px;\nline-height:1.2\nletter-spacing:0.06em;\ncolor:#000;\n`;\n","import { P, Div } from './NotFoundStyles.js';\n\nconst NotFound = () => (\n  <Div>\n    <P>There are no data for this request</P>\n  </Div>\n);\nexport { NotFound };\n","import { useState, useEffect } from 'react';\nimport { Routes } from 'react-router-dom';\nimport { MovieRoutes } from 'pages/MovieRoutes/MovieRoutes.js';\nimport { getMovies } from 'api/data_search.js';\n\nimport { Div, H1 } from 'pages/Home/HomeStyles.js';\n\nimport { MoviesList } from 'pages/MoviesList/MoviesList.js';\n\nimport { NotFound } from 'pages/NotFound/NotFound';\n\nexport default function Home() {\n  const [isLoading, setLoading] = useState(true);\n  localStorage.setItem('show', JSON.stringify(false));\n\n  useEffect(() => {\n    getMovies(\n      '/3/trending/all/day?api_key=d0e55d9c3b81e26ea2922058fa861ca2&language=en-US&include_adult=false&page=1'\n    ).then(response => {\n      setLoading(false);\n      localStorage.setItem('response', JSON.stringify(response));\n    });\n  }, []);\n\n  return (\n    <Div>\n      {!JSON.parse(localStorage.getItem('response')) && <NotFound />}\n      <H1>Trending today</H1>\n      {!isLoading && <MoviesList />}\n      <Routes>\n        {isLoading &&\n          JSON.parse(localStorage.getItem('response')).data.results.map(\n            result => MovieRoutes(result)\n          )}\n      </Routes>\n    </Div>\n  );\n}\n","import { Route } from 'react-router-dom';\nimport { MovieDetails } from 'pages/MovieDetails/MovieDetails.js';\n\nimport PropTypes from 'prop-types';\n\nexport function MovieRoutes({ id }) {\n  return <Route key={id} path={`/:id/*`} element={<MovieDetails />} />;\n}\n\nMovieRoutes.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n"],"names":["Div","styled","_templateObject","_taggedTemplateLiteral","Ul","_templateObject2","NavDetails","_templateObject3","StyledLink","NavLink","_templateObject4","Img","Li","Name","Popular","back","nanoid","Cast","_jsxs","children","_jsx","to","concat","JSON","parse","localStorage","getItem","data","id","Routes","Route","path","element","MovieDetails","cast","map","_ref","profile_path","name","original_name","popularity","src","alt","CastItem","Author","Rating","Content","Created","_templateObject5","Updated","_templateObject6","Url","_templateObject7","Reviews","results","review","author_details","content","created_at","updated_at","url","rating","ReviewItem","DivInfo","H1","_templateObject8","POrigin","_templateObject9","PMedia","_templateObject10","PLanguage","_templateObject11","POverview","_templateObject12","PPopularity","_templateObject13","PRelease","_templateObject14","PAverage","_templateObject15","PCount","_templateObject16","PInfo","_templateObject17","identCast","identReview","movie","_location$state$from","_location$state","_location$state$from2","_location$state2","movieId","useParams","forEach","result","location","useLocation","backLinkCast","state","from","backLinkReviews","useEffect","getMovies","then","response","setItem","stringify","poster_path","title","origin_country","media_type","original_language","overview","first_air_date","release_date","vote_average","vote_count","P","NotFound","Home","_useState","useState","_useState2","_slicedToArray","isLoading","setLoading","MoviesList","MovieRoutes"],"sourceRoot":""}