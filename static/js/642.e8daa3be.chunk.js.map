{"version":3,"file":"static/js/642.e8daa3be.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetailsStyles.js","pages/MovieDetails/MovieDetails.js"],"sourcesContent":["import styled from 'styled-components';\n\nimport { NavLink } from 'react-router-dom';\n\nexport const Div = styled.div`\n  margin-top: 20px;\n  margin-left: 20px;\n  width: 100%;\n  height: 100%;\n`;\n\nexport const NavDetails = styled.nav`\n  display: flex;\n  flex-direction: column;\n  margin-top: 20px;\n  gap: 20px;\n`;\n\nexport const Img = styled.img`\n  display: flex;\n  width: 400px;\n  height: auto;\n  object-fit: cover;\n`;\nexport const StyledBack = styled(NavLink)`\n  font-family: 'Roboto';\n  margin-left: 20px;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.2;\n  letter-spacing: 0.06em;\n  color: black;\n`;\nexport const StyledLink = styled(NavLink)`\n  font-family: 'Roboto';\n  display: list-item;\n  margin-left: 20px;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.2;\n  letter-spacing: 0.06em;\n  color: black;\n`;\n\nexport const Ul = styled.ul`\n  display: flex;\n  list-style: none;\n  gap: 20px;\n`;\n\nexport const Li = styled.li`\n  display: flex;\n`;\n\nexport const DivInfo = styled.div`\n  display: block;\n`;\n\nexport const H1 = styled.h1`\n  display: flex;\n  margin-top: 20px;\n  width: auto;\n  height: auto;\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 24px;\n  line-height: 1.2;\n  letter-spacing: 0.06em;\n  text-transform: uppercase;\n  color: #000;\n`;\n\nexport const POrigin = styled.span`\n  display: flex;\n  margin-top: 20px;\n  width: auto;\n  height: auto;\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.2;\n  letter-spacing: 0.06em;\n  color: #000;\n`;\n\nexport const PMedia = styled.span`\n  display: flex;\n  margin-top: 20px;\n  width: auto;\n  height: auto;\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.2;\n  letter-spacing: 0.06em;\n  color: #000;\n`;\n\nexport const PLanguage = styled.span`\n  display: flex;\n  margin-top: 20px;\n  width: auto;\n  height: auto;\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.2;\n  letter-spacing: 0.06em;\n  color: #000;\n`;\n\nexport const POverview = styled.span`\n  display: flex;\n  margin-top: 20px;\n  width: 800px;\n  height: auto;\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.2;\n  letter-spacing: 0.06em;\n  color: #000;\n`;\n\nexport const PPopularity = styled.span`\n  display: flex;\n  margin-top: 20px;\n  width: auto;\n  height: auto;\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.2;\n  letter-spacing: 0.06em;\n  color: #000;\n`;\n\nexport const PRelease = styled.span`\n  display: flex;\n  margin-top: 20px;\n  width: auto;\n  height: auto;\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.2;\n  letter-spacing: 0.06em;\n  color: #000;\n`;\n\nexport const PAverage = styled.span`\n  display: flex;\n  margin-top: 20px;\n  width: auto;\n  height: auto;\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.2;\n  letter-spacing: 0.06em;\n  color: #000;\n`;\n\nexport const PCount = styled.span`\n  display: flex;\n  margin-top: 20px;\n  width: auto;\n  height: auto;\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.2;\n  letter-spacing: 0.06em;\n  color: #000;\n`;\nexport const PInfo = styled.span`\n  display: flex;\n  margin-top: 20px;\n  width: auto;\n  height: auto;\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.2;\n  letter-spacing: 0.06em;\n  color: #000;\n`;\nexport const PGenres = styled.span`\n  display: flex;\n  margin-top: 20px;\n  width: auto;\n  height: auto;\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.2;\n  letter-spacing: 0.06em;\n  color: #000;\n`;\n","import { useParams } from 'react-router-dom';\nimport { lazy, Suspense } from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport { nanoid } from 'nanoid';\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { getMovies } from 'api/data_search.js';\nimport { useLocation } from 'react-router-dom';\n//import Cast from 'components/Cast/Cast.js';\n//import Reviews from 'components/Reviews/Reviews.js';\nimport {\n  StyledLink,\n  StyledBack,\n  Div,\n  Ul,\n  Li,\n  DivInfo,\n  H1,\n  PGenres,\n  POrigin,\n  PMedia,\n  PLanguage,\n  POverview,\n  PPopularity,\n  PRelease,\n  PAverage,\n  PCount,\n  PInfo,\n  NavDetails,\n  Img,\n} from 'pages/MovieDetails/MovieDetailsStyles.js';\nconst Reviews = lazy(() => import('components/Reviews/Reviews.js'));\nconst Cast = lazy(() => import('components/Cast/Cast.js'));\n\nconst identCast = nanoid();\nconst identReview = nanoid();\nlet movie;\nconst defaultImg =\n  'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\nexport default function MovieDetails() {\n  const movieId = useParams();\n  const navigate = useNavigate();\n\n  const [data, setData] = useState({\n    films: [],\n    isLoading: true,\n  });\n\n  localStorage.setItem('flag', JSON.stringify(true));\n  useEffect(\n    () => {\n      getMovies(\n        `/3/movie/${movieId.id.replace(\n          ':',\n          ''\n        )}?api_key=d0e55d9c3b81e26ea2922058fa861ca2`\n      )\n        .then(response => {\n          setData(prev => ({\n            ...prev,\n            films: [response.data],\n            isLoading: false,\n          }));\n        })\n        .catch(err => {\n          if (err.response) {\n            navigate('/');\n          } else if (err.request) {\n            navigate('/');\n          } else {\n            navigate('/');\n          }\n        });\n    },\n    [data.films, movieId, navigate],\n    movie\n  );\n  const location = useLocation();\n\n  const backLinkCast = window.location.href.split('/').includes('movies')\n    ? location.state?.from ?? `/movies/${movieId.id.replace(':', '')}/cast`\n    : location.state?.from ?? `/${movieId.id.replace(':', '')}/cast`;\n  const backLinkReviews = window.location.href.split('/').includes('movies')\n    ? location.state?.from ?? `/movies/${movieId.id.replace(':', '')}/reviews`\n    : location.state?.from ?? `/${movieId.id.replace(':', '')}/reviews`;\n\n  return (\n    <Div>\n      <NavDetails>\n        <StyledBack\n          to={\n            window.location.href.split('/').includes('movies') ? '/movies' : `/`\n          }\n          state={{ from: location }}\n        >\n          Go Back\n        </StyledBack>\n      </NavDetails>\n      {!data.isLoading && (\n        <Ul>\n          <Li>\n            <Img\n              src={\n                data.films[0].poster_path\n                  ? `https://image.tmdb.org/t/p/w500/${data.films[0].poster_path}`\n                  : defaultImg\n              }\n              alt={'poster'}\n            />\n          </Li>\n          <Li>\n            <DivInfo>\n              <H1>\n                {data.films[0].title ? data.films[0].title : data.films[0].name}\n              </H1>\n              <POrigin>\n                <b>{data.films[0].origin_country && 'Origin country:'}&nbsp;</b>\n                {data.films[0].origin_country && data.films[0].origin_country}\n              </POrigin>\n              <PMedia>\n                <PGenres>\n                  <b>{data.films[0].genres && 'Genres:'}&nbsp;</b>\n                  {data.films[0].genres.map(genre => genre.name + `,  `)}\n                </PGenres>\n                <b>{data.films[0].media_type && 'Media type:'}&nbsp;</b>\n                {data.films[0].media_type}\n              </PMedia>\n              <PLanguage>\n                <b>Original language:&nbsp;</b>\n                {data.films[0].original_language}\n              </PLanguage>\n              <POverview>\n                <b>Overview:&nbsp;</b>\n                {data.films[0].overview}\n              </POverview>\n              <PPopularity>\n                <b>Popularity:&nbsp;</b>\n                {data.films[0].popularity}\n              </PPopularity>\n              <PRelease>\n                <b>Release date:&nbsp;</b>\n                {data.films[0].first_air_date\n                  ? data.films[0].first_air_date\n                  : data.films[0].release_date}\n              </PRelease>\n              <PAverage>\n                <b>Vote average:&nbsp;</b>\n                {data.films[0].vote_average}\n              </PAverage>\n              <PCount>\n                <b>Vote count:&nbsp;</b>\n                {data.films[0].vote_count}\n              </PCount>\n            </DivInfo>\n          </Li>\n        </Ul>\n      )}\n      <PInfo>\n        <b>Additional Information</b>\n      </PInfo>\n      <NavDetails>\n        <StyledLink key={identCast} to={backLinkCast}>\n          Cast\n        </StyledLink>\n\n        <StyledLink key={identReview} to={backLinkReviews}>\n          Reviews\n        </StyledLink>\n      </NavDetails>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Routes>\n          <Route\n            path=\"/cast//*\"\n            element={<Cast filmId={movieId.id.replace(':', '')} />}\n          />\n\n          <Route\n            path=\"/reviews//*\"\n            element={<Reviews filmId={movieId.id.replace(':', '')} />}\n          />\n        </Routes>\n      </Suspense>\n    </Div>\n  );\n}\n"],"names":["Div","styled","_templateObject","_taggedTemplateLiteral","NavDetails","_templateObject2","Img","_templateObject3","StyledBack","NavLink","_templateObject4","StyledLink","_templateObject5","Ul","_templateObject6","Li","_templateObject7","DivInfo","_templateObject8","H1","_templateObject9","POrigin","_templateObject10","PMedia","_templateObject11","PLanguage","_templateObject12","POverview","_templateObject13","PPopularity","_templateObject14","PRelease","_templateObject15","PAverage","_templateObject16","PCount","_templateObject17","PInfo","_templateObject18","PGenres","_templateObject19","Reviews","lazy","Cast","identCast","nanoid","identReview","MovieDetails","_location$state$from","_location$state","_location$state$from2","_location$state2","_location$state$from3","_location$state3","_location$state$from4","_location$state4","movieId","useParams","navigate","useNavigate","_useState","useState","films","isLoading","_useState2","_slicedToArray","data","setData","localStorage","setItem","JSON","stringify","useEffect","getMovies","concat","id","replace","then","response","prev","_objectSpread","catch","err","request","movie","location","useLocation","backLinkCast","window","href","split","includes","state","from","backLinkReviews","_jsxs","children","_jsx","to","src","poster_path","alt","title","name","origin_country","genres","map","genre","media_type","original_language","overview","popularity","first_air_date","release_date","vote_average","vote_count","Suspense","fallback","Routes","Route","path","element","filmId"],"sourceRoot":""}